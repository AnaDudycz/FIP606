{
  "hash": "d63a9b819a7c5555522a683225301484",
  "result": {
    "markdown": "---\ntitle: \"Formas de carregar planilhas para dentro do R\"\n---\n\n\n## Abrindo conjunto de dados a partir de uma planilha excel\n\nPrimeiramente é necessário adicionar a planilha com os dados, dentro da pasta com o projeto de trabalho. Em seguida instalar e carregar o pacote **readxl**. Para corregar a planilha é necessário usar a função **read_excel**() e inserir o nome completo do arquivo incluindo o .xlsx, entre aspas. Se houver mais de uma planilha dentro do arquivo excel é necessário indicar qual a planilha deseja-se adicionar, deve-se adicionar o argumento sheet = número da ordem da planilha.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##install.packages(\"readxl\")\nlibrary(readxl)\n\ndf2 <- read_excel(\"dados-diversos.xlsx\")\ndf21 <- read_excel(\"dados-diversos.xlsx\", sheet = 2)\n```\n:::\n\n\n## Abrindo conjunto de dados a partir de um arquivo de texto (csv)\n\nO processo é o mesmo do arquivo xlsx, basta adicionar o aquivo no formato csv na pasta do projeto. O pacote a ser usado é o **tidyverse** e a função **read.csv()**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ndf3 <- read.csv(\"dados-diversos.csv\")\n```\n:::\n\n\n## Abrindo conjunto de dados a partir de uma planilha google\n\nCom o pacote **gsheet** e a função **gsheet2tbl** é possivel carregar uma planilha google apenas com o link desta.Também é possível fazer o carregamento com o pacote **googlesheets4** e a função **read_sheet**.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\ndf4 <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit#gid=921203844\")\n\n\nlibrary (googlesheets4)\ndf5 <- read_sheet(\"https://docs.google.com/spreadsheets/d/1aID5Dh6PlBVCKzU1j7k-WA6zuWQWE2NhtWEgdJtt5iA/edit?usp=sharing\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n! Using an auto-discovered, cached token.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n  To suppress this message, modify your code or options to clearly consent to\n  the use of a cached token.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n  See gargle's \"Non-interactive auth\" vignette for more details:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n  <https://gargle.r-lib.org/articles/non-interactive-auth.html>\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nℹ The googlesheets4 package is using a cached token for 'ana.dudycz@ufv.br'.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAuto-refreshing stale OAuth token.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Reading from \"dados-diversos\".\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ Range 'magnesio'.\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}